openapi: 3.0.3
info:
  title: dein.li - Kurzlink
  description: OpenAPI specification for dein.li - Kurzlink
  contact:
    name: Seba Momann
    url: 'http://sebamomann.de'
    email: support@dein.li
  version: 1.0.0
servers:
  - url: 'https://api.dein.li'
    description: Main Server
tags:
  - name: Link
    description: Everything connected to links
  - name: Global
    description: Everything connected tothe entire site
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  examples:
    DuplicateValues:
      value:
        code: DUPLICATE_VALUES
        message: Provided values are already in use
        data:
          - attribute: short
            value: myShortLink
      summary: |
        'Duplicate Values' error example
    NotFound:
      value:
        code: NOT_FOUND
        message: Provided identifier can't locate entity
        data:
          attribute: short
          in: path
          value: nonExistingShort
      summary: |
        'Not Found' error example
    UnprocessableEntity:
      value:
        code: INVALID_ATTRIBUTES
        message: Given attributes can not be processed
        data:
          - attribute: original
            value: invalidURL
            message: Invalid URL format
      summary: |
        'Unprocessable Entity' error example
    ForbiddenAttributes:
      value:
        code: FORBIDDEN_ATTRIBUTES
        message: >-
          Specified values can only be set by authorized users. Please login and
          try again.
        data:
          - short
      summary: |
        'Forbidden Attributes' error example
    ForbiddenInsufficientPermissions:
      value:
        code: INSUFFICIENT_PERMISSIONS
        message: Missing permissions to execute request
        data:
          - attribute: short
            value: foreignShort
            message: Specified link is not in your ownership
      summary: |
        'Insufficient Permissions' error example
  schemas:
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Autogenerated UUID on creation
        short:
          type: string
          description: Set or autogenerated short form of the link
        original:
          type: string
          description: Original full URL the user gets redirected on short call
        status:
          type: string
          default: ACTIVE
          description: Current State of the link
          enum:
            - ACTIVE
            - DEPRECATED
            - LOCKED
        iat:
          type: string
          format: date-time
          description: Creation date
        nrOfCalls:
          type: integer
          format: int32
          description: Number of times the link has been called
      example:
        id: a63cce62-ab44-4eef-b3ca-ea2fdd85152a
        short: myshortlink
        original: 'https://dein.li'
        status: '1'
        iat: '2021-01-09T12:05:12.297Z'
    LinkCreationObject:
      type: object
      required:
        - original
      properties:
        short:
          type: string
          description: Set or autogenerated short form of the link
        original:
          type: string
          description: Original full URL the user gets redirected on short call
      example:
        short: myshortlink
        original: 'https://dein.li'
    PermissionCreationObject:
      type: object
      required:
        - link
      properties:
        link:
          type: object
          description: Link to create permission for
          required:
            - short
          properties: 
            short:
              type: string
              description: Unique short of link
        comment:
          type: string
          description: Optional comment for additional information
        expiration:
          type: string
          format: date-time
          description: Date of permission expiration
      example:
        link: 
          short: myShort
        comment: 'Permission for John Doe'
    PermissionUpdateObject:
      type: object
      required:
        - link
      properties:
        comment:
          type: string
          description: Comment for additional information
        expiration:
          type: string
          format: date-time
          description: Date of permission expiration
      example:
        comment: 'Permission for John Doe'    
        expiration: '2021-01-09T12:05:12.297Z'
    LinkCreateVersionObject:
      type: object
      properties:
        original:
          type: string
          description: Original full URL the user gets redirected on short call
      example:
        original: 'https://new.dein.li'
    Statistic:
      type: object
      properties:
        totalCalls:
          type: number
          format: integer
          description: Amount of calls made in the given intervall
        distinctCalls:
          type: number
          format: integer
          description: Amount of disctinct calls made in the given intervall
        calls:
          $ref: '#/components/schemas/Call'
      example:
        totalCalls: 1000
        distinctCalls: 650
        calls:
          - count: 20
            frame: '2021-01-09T12:05'
    Call:
      type: object
      properties:
        count:
          type: number
          format: integer
          description: Amount of calls made in the given time unit
        frame:
          type: string
          format: date
          description: >
            Date frame. Here: calls made in Minute 5 after 12 at Date
            2021-01-09. Also possible: calls made in Hour 12 at Date 2021-01-09.
            ('2021-01-09T12')
      example:
        count: 20
        frame: '2021-01-09T12:05'
    Permission:
      type: object
      description: Permission to modify link
      properties:
        id:
          type: string
          format: uuid
          description: Autogenerated UUID on creation
        comment:
          type: string
          description: Optional comment for additional information
        token:
          type: string
          description: Token for API authentication
        original:
          type: string
          description: Original full URL the user gets redirected on short call
        expiration:
          type: string
          format: date-time
          description: Date of permission expiration
        iat:
          type: string
          format: date-time
          description: Creation date
      required:
        - id
          comment
          token
          expiration
          iat
      example:
        id: '6fcf9d2d-c50b-4df2-8867-5d3fd186ade9'
        comment: Permission for John Doe
        token: 'UGm4fBPVvP2hvtvNhY9Vnf9k3GFxwXDT'
        expiration: '2021-06-19 16:20:42.276Z'
        iat: '2021-06-19 16:20:42.276Z'
    Error:
      type: object
      required:
        - code
        - message
        - data
      properties:
        code:
          type: string
          description: General description of the occuring error
        message:
          type: string
          description: Specific description of the occuring error
        data:
          anyOf:
            - type: array
              description: Error specific informations like invalid fields
              items:
                type: object
            - type: string
            - type: object
  parameters:
    sortLinkParam:
      name: sort
      in: query
      description: Sorting value including ASC (+) or DESC (-)
      required: false
      schema:
        type: string
        description: Sorting possibility
      example: +iat
    limitParam:
      name: limit
      in: query
      description: Limit the amount of returned elements
      required: false
      schema:
        type: string
    offsetParam:
      name: offset
      in: query
      description: Number of elements to skip due to prior fetch
      required: false
      schema:
        type: string
    shortParam:
      name: short
      in: path
      description: Unique short of link
      required: true
      schema:
        type: string
    tokenParam:
      name: token
      in: path
      description: Permission token
      required: true
      schema:
        type: string
    linkQuery:
      name: link
      in: query
      description: Qunique short of link
      required: true
      schema:
        type: string
  responses:
    NoContent:
      description: No content.
    Unauthorized:
      description: Missing or Invalid Authorization Header.
    UnauthorizedForbiddenAttributes:
      description: Attrbiute can only be set by authorized users.
      content:
        application/json:
          examples:
            ForbiddenAttributes:
              $ref: '#/components/examples/ForbiddenAttributes'
    ForbiddenInsufficientPermissions:
      description: Forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            DuplicateValues:
              $ref: '#/components/examples/ForbiddenInsufficientPermissions'
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            NotFound:
              $ref: '#/components/examples/NotFound'
    Conflict:
      description: Conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            DuplicateValues:
              $ref: '#/components/examples/DuplicateValues'
    UnprocessableEntity:
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            DuplicateValues:
              $ref: '#/components/examples/UnprocessableEntity'
    InternalServerError:
      description: Internal Server Error.
paths:
  /links:
    get:
      operationId: getLinksByUser
      description: Returns all links that the user is allowed to see
      security:
        - {}
        - BearerAuth: []
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/sortLinkParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: List of all links
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
          links:
            GetLinkByShort:
              operationId: getLinkByShort
              parameters:
                short: $response.body#/short
              description: >
                The `short` value returned in the response can be used as the
                `short` parameter in `GET /links/{short}`.
            GetLinkStatistics:
              operationId: getLinkStatistics
              parameters:
                short: $response.body#/short
              description: >
                The `short` value returned in the response can be used as the
                `short` parameter in `GET /links/{short}/statistics`.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: createLink
      description: Create a new link
      security:
        - {}
        - BearerAuth: []
      tags:
        - Link
      requestBody:
        description: Values needed for link creation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCreationObject'
      responses:
        '201':
          description: Created
          headers:
            location:
              schema:
                type: string
              description: URL to the created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  short:
                    type: string
                    example: myShortLink
          links:
            GetLinkByShort:
              operationId: getLinkByShort
              parameters:
                short: $response.body#/short
              description: >
                The `short` value returned in the response can be used as the
                `short` parameter in `GET /links/{short}`.
            GetLinkStatistics:
              operationId: getLinkStatistics
              parameters:
                short: $response.body#/short
              description: >
                The `short` value returned in the response can be used as the
                `short` parameter in `GET /links/{short}/statistics`.
        '401':
          $ref: '#/components/responses/UnauthorizedForbiddenAttributes'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/links/{short}':
    get:
      operationId: getLinkByShort
      description: Returns link by the specified short link
      security:
        - {}
        - BearerAuth: []
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/shortParam'
      responses:
        '200':
          description: Link entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: createVersion
      description: Create a new version for the specified link
      security:
        - BearerAuth: []
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/shortParam'
      requestBody:
        description: Values needed for new link version
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCreateVersionObject'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/links/{short}/versions':
    get:
      operationId: getLinkVersions
      description: Returns all versions of a given link
      security:
        - BearerAuth: []
      tags:
        - Link
      parameters:
        - $ref: '#/components/parameters/shortParam'
      responses:
        '200':
          description: List of all versions
          content:
            application/json:
              schema:
                type: array
                description: List of versions of provided short
                items:
                  $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/links/{short}/statistics':
    get:
      operationId: getLinkStatistics
      description: Returns call informations about the specified link
      security:
        - BearerAuth: []
      tags:
        - Link
        - Statistics
      parameters:
        - $ref: '#/components/parameters/shortParam'
      responses:
        '200':
          description: Statistics entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistic'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /global/links/statistics:
    get:
      operationId: getGlobalLinkStatistics
      description: Returns call informations about all existing links combined
      security:
        - {}
      tags:
        - Link
        - Global
        - Statistics
      responses:
        '200':
          description: Statistics entity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Statistic'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /permissions:
    get:
      operationId: getPermissionsByShort
      description: Returns all permissions created for the specified link
      security:
        - BearerAuth: []
      tags:
        - Permission
      parameters:
        - $ref: '#/components/parameters/linkQuery'
      responses:
        '200':
          description: List of all permissions for link
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
          links:
            GetLinkStatistics:
              operationId: updatePermission
              parameters:
                short: $response.body#/token
              description: >
                The `token` value returned in the response can be used as the
                `token` parameter in `PUT /permissions/{token}`.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: createPermission
      description: Create new permission for link
      security:
        - BearerAuth: []
      tags:
        - Permission
      requestBody:
        description: Values needed for permission creation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreationObject'
      responses:
        '201':
          description: Created
          headers:
            location:
              schema:
                type: string
              description: URL to the created resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  token:
                    type: string
                example:
                  id: '6fcf9d2d-c50b-4df2-8867-5d3fd186ade9'
                  token: 'UGm4fBPVvP2hvtvNhY9Vnf9k3GFxwXDT'
          links:
            GetPermissionByToken:
              operationId: getPermissionByToken
              parameters:
                token: $response.body#/token
              description: >
                The `token` value returned in the response can be used as the
                `token` parameter in `GET /permissions/{token}`.
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/permissions/{token}':
    get:
      operationId: getPermissionByToken
      description: Returns permission by the specified token
      security:
        - BearerAuth: []
      tags:
        - Permission
      parameters:
        - $ref: '#/components/parameters/tokenParam'
      responses:
        '200':
          description: Permission entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: updatePermission
      description: Update permission
      security:
        - BearerAuth: []
      tags:
        - Permission
      parameters:
        - $ref: '#/components/parameters/tokenParam'
      requestBody:
        description: Possible values for permission update. Single values allowed
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdateObject'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: deletePermission
      description: Delete permission
      security:
        - BearerAuth: []
      tags:
        - Permission
      parameters:
        - $ref: '#/components/parameters/tokenParam'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenInsufficientPermissions'
        '500':
          $ref: '#/components/responses/InternalServerError'
